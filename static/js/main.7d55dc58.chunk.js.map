{"version":3,"sources":["components/MessagesTable/MessagesTable.jsx","App.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","tableLayout","head","backgroundColor","headCell","color","cursor","headMsg","width","bodyCell","maxHeight","overflow","bodyCellDate","fontSize","bodyCellMsg","bodyCellChannel","box","display","fontWeight","iconActive","MessagesTable","userMessages","sortArrows","sortClick","useState","user","date","channel","activeField","setActiveField","handleClick","fieldName","name","getArrowDirrection","dir","active","style","classes","className","TableContainer","component","Paper","height","Table","TableHead","TableRow","TableCell","Box","onClick","TableBody","map","row","idx","msg","app","margin","boxShadow","padding","header","justifyContent","sortFields","messages","arrows","newMessagesList","field","sort","a","b","App","setMessages","setArrows","load","setLoad","sorting","setSorting","useEffect","axios","get","then","data","catch","err","console","log","setTimeout","prev","Container","maxWidth","sortDir","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d55dc58.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport {\n  Paper,\n  Table,\n  TableContainer,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableCell,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 500,\n    tableLayout: \"fixed\",\n  },\n  head: {\n    backgroundColor: \"black\",\n  },\n  headCell: {\n    color: \"#b0dbf9\",\n    cursor: \"default\",\n  },\n  headMsg: {\n    color: \"#b0dbf9\",\n    width: \"40%\",\n  },\n  bodyCell: {\n    maxHeight: 50,\n    overflow: \"hidden\",\n  },\n  bodyCellDate: {\n    maxHeight: 50,\n    overflow: \"hidden\",\n    color: \"#bdbdbd\",\n    fontSize: \"0.7rem\",\n  },\n  bodyCellMsg: {\n    color: \"#ffa565\",\n  },\n  bodyCellChannel: {},\n  box: {\n    display: \"flex\",\n    fontWeight: 'bold',\n  },\n  iconActive: {\n    color: \"#da0421\",\n  },\n});\n\nexport default function MessagesTable({ userMessages, sortArrows, sortClick }) {\n  const [activeField, setActiveField] = useState({\n    user: false,\n    date: false,\n    channel: false,\n  });\n\n  const handleClick = (fieldName) => {\n    const newField = { name: false, date: false, channel: false };\n    setActiveField({ ...newField, [fieldName]: true });\n    sortClick(fieldName);\n  };\n\n  const getArrowDirrection = (dir, active) => {\n    const style = active ? classes.iconActive : null;\n    return dir === \"desc\" ? (\n      <ExpandMoreIcon className={style} />\n    ) : (\n      <ExpandLessIcon className={style} />\n    );\n  };\n\n  const classes = useStyles();\n  return (\n    <TableContainer component={Paper} style={{ height: \"80vh\", width: \"100%\" }}>\n      <Table className={classes.table}>\n        <TableHead className={classes.head}>\n          <TableRow>\n            <TableCell className={classes.headCell}>\n              <Box className={classes.box} onClick={() => handleClick(\"user\")}>\n                {getArrowDirrection(sortArrows.user, activeField.user)}\n                User\n              </Box>\n            </TableCell>\n            <TableCell className={classes.headCell}>\n              <Box className={classes.box} onClick={() => handleClick(\"date\")}>\n                {getArrowDirrection(sortArrows.date, activeField.date)}\n                Date\n              </Box>\n            </TableCell>\n            <TableCell className={classes.headCell}>\n              <Box\n                className={classes.box}\n                onClick={() => handleClick(\"channel\")}\n              >\n                {getArrowDirrection(sortArrows.channel, activeField.channel)}\n                Channel\n              </Box>\n            </TableCell>\n            <TableCell className={classes.headMsg}> \n            \t<Box className={classes.box}> Message </Box>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {userMessages.map((row, idx) => (\n            <TableRow key={idx}>\n              <TableCell>\n                <div className={classes.bodyCell}>{row.user}</div>\n              </TableCell>\n              <TableCell>\n                <div className={classes.bodyCellDate}>{row.date}</div>\n              </TableCell>\n              <TableCell>\n                <div className={classes.bodyCell}>\n                  <i>{row.channel}</i>\n                </div>\n              </TableCell>\n              <TableCell className={classes.bodyCellMsg}>\n                <div className={classes.bodyCell}>{row.msg}</div>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MessagesTable from \"./components/MessagesTable/MessagesTable\";\nimport { Container } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\n\nconst ZERO = 0;\nconst NEGATIVE = -1;\nconst POZITIVE = 1;\n\nconst useStyles = makeStyles({\n  app: {\n    margin: \"10% auto\",\n    boxShadow: \"0 0 20px 5px #bbbbbb\",\n    padding: 20,\n  },\n  header: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: \"#a5a5a5\",\n  },\n});\n\nfunction sortFields(messages, arrows) {\n  const newMessagesList = [...messages];\n  const field = arrows.active;\n  const dir = arrows[field] === \"desc\" ? POZITIVE : NEGATIVE;\n  newMessagesList.sort((a, b) => {\n    if (a[field] > b[field]) return POZITIVE * dir;\n    if (a[field] < b[field]) return NEGATIVE * dir;\n    return ZERO;\n  });\n  return newMessagesList;\n}\n\nfunction App() {\n  const classes = useStyles();\n  const [userMessages, setMessages] = useState([]);\n  const [sortArrows, setArrows] = useState({\n    user: \"desc\",\n    date: \"desc\",\n    channel: \"desc\",\n    active: \"user\",\n  });\n  const [load, setLoad] = useState(false);\n  const [sorting, setSorting] = useState(false);\n\n  const sortClick = (fieldName) => {\n    const sortDir = sortArrows[fieldName] === \"desc\" ? \"asc\" : \"desc\";\n    const arrows = { ...sortArrows, [fieldName]: sortDir, active: fieldName };\n    setArrows((prev) => arrows);\n    setMessages(sortFields(userMessages, arrows));\n    setSorting(true);\n  };\n\n  useEffect(() => {\n    const url = \"https://my-test-server3.vercel.app/hello/info\";\n    if (!sorting) {\n      axios\n        .get(url)\n        .then((data) => {\n          const newMessagesList = sortFields(data.data.data, sortArrows);\n          setMessages(newMessagesList);\n        })\n        .catch((err) => {\n          console.log(\"Sorry! Somethig was wrong then getting data...\");\n        });\n    } else {\n      setSorting(false);\n    }\n  }, [load]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoad((prev) => !prev);\n    }, 3000);\n  }, [load]);\n\n  return (\n    <Container maxWidth=\"md\" className={classes.app}>\n      <Box className={classes.header}>\n        <h1>Table of messages</h1>\n      </Box>\n      <MessagesTable\n        sortClick={sortClick}\n        sortArrows={sortArrows}\n        userMessages={userMessages}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}